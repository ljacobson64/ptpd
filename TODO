# not part of distribution - TODO notes to implement before next release

2.3.1.1 / 2.3.2:

- man page updates for template files x
- clock ID printed in reverse in L2 mode
  with (grandmasterID present?) - not an issue, looks like a White Rabbit problem x
- compact grantable message types and use smaller array to save memory x
- 16.1.1: may be granted in listening state or passive state <- but g.8265 is no BMCA x
- sig/msg message acceptance 4 options: all1,port, clockid,port, clock,all1, all1,all1 x
- rework config option parsing x
- rework parseConfig to support an opcode, get rid of remaining macros x
- pointer to best master x
- disqualification flag x
- remove masteraddr in favour of bestMaster->sourceAddr x
- use pointer to best master x
- management TLV buffer guard and don't unpack GET x
- SNMP - implement statistics tables x
- SNMP - implement remaining traps x
- add alarm events -> trigger SNMP traps x
- add offset alarm threshold to config x
- clean up object order in the MIB x
- call alarm handlers before shutdown (on port disabled?) x

- add alarm initial delay to config + man x
- add alarm timeout to config + man x
- add snmp traps enable/disable to config + man x
- implement ofm threshold alarm triggering x
- SNMP MIB: add domain mismatch trap + last domain x
- add alarm messages to log notifications x

- add alarm messages to alarm table (for fault record)
- rework trigger and dependency macros: 2nd pass?
- complete built-in templates
- add dummy or populated default template file x [dummy]
- NVRAM write?
- use split token loop macros x
- SET messages to refresh the config properly x/-
  add set + commit + rollback as snmp handles
- remaining management message SET handling
- add fault record and numberfaults to snmp and mgmt
- update man page with alarm descriptions
- improve alarm dump
- add alarm descriptions to help output
- eventually add support for an event queue
- SNMP MIB: add alarm list so that
  informs can also send date and time
- MGMT clear and get fault record
- configurable alarm severities?

- selectively enable SNMP traps

- clockdriver_linuxphc: implement PTP device locking
- clockdriver: implement health checks for linuxphc and unix
- clockdriver: rework kernel flags / leap seconds, remove TimeService
- protocol: PTPMon implementation x
- msg: extract TLVs from any message x -> libcck
- clockdriver: allow system clock to be the preferred source. PTP -> sys -> rest
- clockdriver: MAD filter autotune and /  or unlock condition? +/- unlock
- PTP offsets: remove Peirce's outlier filter, replace with MAD
- MAD: use bucket median rather than qsort to speed up
- clockdriver: third kP/kI pair: for inter-clock sync

- man: diff -O vs. man, complete any missing entries
- man: alarms and descriptions
- document SNMP integration and alarm handling
- document HW/w integration, clock states and clock selection
x clockdriver: implement vendor-specific extensions. Dependency: get MAC address, ioctl helper,
  dependency: netutils.c
x- net: source address selection



x start working on transport implementation, TransportAddress etc.
- reconsider NTP integration? Shm with zero offsets? Forget about mode6 / mode7. Too much work.

- JSON interface for configuration?

- tracking the frequency of extra clocks
- clock groups, one syncs to another. Group 1: system clock, PTP NIC, group 2: system clock, extra NICs. 
- audit log: MTIE for each clock, configurable interval

